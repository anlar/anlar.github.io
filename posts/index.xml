<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Posts on Блог AnLar</title><link>https://anlar.github.io/posts/</link><description>Recent content in Posts on Блог AnLar</description><generator>Hugo</generator><language>ru</language><lastBuildDate>Fri, 22 Sep 2023 00:00:00 +0400</lastBuildDate><atom:link href="https://anlar.github.io/posts/index.xml" rel="self" type="application/rss+xml"/><item><title>Переключение профилей мониторов с помощью autorandr и Rofi</title><link>https://anlar.github.io/2023-09-22-autorandr-rofi/</link><pubDate>Fri, 22 Sep 2023 00:00:00 +0400</pubDate><guid>https://anlar.github.io/2023-09-22-autorandr-rofi/</guid><description>&lt;p>При работе (особенно если у тебя ноутбук и ты им пользуешься в разных локациях) бывает нужно переключаться между разными конфигурациями мониторов.
Сюда входит их разрешение, взаимное расположение и статус (вкл/выкл).
Обычно система умеет самостоятельно изменять профиль отображения при подключении и отключении дисплеев, но часто это не соответствует тому, что хочется, и приходится вручную настраивать профиль через параметры мониторов в системе.
Но можно упростить и автоматизировать этот процесс с помощью утилиты &lt;code>autorandr&lt;/code>, которая умеет запоминать и (автоматически) применять настройки мониторов.
А с помощью Rofi можно создать удобное меню для ручного переключения между профилями.&lt;/p>
&lt;h2 id="autorandr">autorandr&lt;/h2>
&lt;p>&lt;a href="https://github.com/phillipberndt/autorandr">autorandr&lt;/a> &amp;ndash; это удобная утилита, которая может сохранять информацию о конфигурации мониторов от &lt;code>xrandr&lt;/code> в отдельные профили и применять их (вручную, или автоматически определяя подходящий профиль).
Для определения мониторов используется его идентификатор &lt;a href="https://en.wikipedia.org/wiki/Extended_Display_Identification_Data">EDID&lt;/a>, т.е. корректно определяются разные мониторы, даже если они подключаются к одному порту.&lt;/p>
&lt;p>Устанавливаем &lt;code>autorandr&lt;/code> из репозитория (deb-based дистрибутив Linux):&lt;/p>
&lt;pre>&lt;code># apt install autorandr
&lt;/code>&lt;/pre>
&lt;p>Либо из PyPI:&lt;/p>
&lt;pre>&lt;code>$ pip install autorandr
&lt;/code>&lt;/pre>
&lt;p>При запуске команды &lt;code>autorandr&lt;/code> она выведет список сохранённых профилей (current &amp;ndash; текущий профиль, detected &amp;ndash; подходящий под текущие подключённые устройства):&lt;/p>
&lt;pre>&lt;code>$ autorandr
office (detected) (current)
home
laptop
&lt;/code>&lt;/pre>
&lt;p>Для создания профиля нужно подключить и настроить мониторы и выполнить команду &lt;code>--save&lt;/code>:&lt;/p>
&lt;pre>&lt;code>$ autorandr --save config_name
&lt;/code>&lt;/pre>
&lt;p>Для загрузки конкретного профиля используется команда &lt;code>--load&lt;/code>:&lt;/p>
&lt;pre>&lt;code>$ autorandr --load config_name
&lt;/code>&lt;/pre>
&lt;p>Или можно использовать команду &lt;code>--change&lt;/code>, чтобы автоматически выбрать и установить подходящий профиль:&lt;/p>
&lt;pre>&lt;code>$ autorandr --change
&lt;/code>&lt;/pre>
&lt;p>Команд &lt;code>--load&lt;/code> и &lt;code>--change&lt;/code> достаточно для управления профилями. Можно запускать их из терминала или повесить на хоткей. Например, создать скрипт &lt;code>display-profile-auto.sh&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#633820">#!/usr/bin/env sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#633820">&lt;/span>autorandr --change
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Так же удобно добавить выполнение &lt;code>--change&lt;/code> в стартовый скрипт своего WM/DE, например в &lt;code>~/.xinitrc&lt;/code>, чтобы автоматически загружать нужный профиль при запуске графической системы.&lt;/p>
&lt;h2 id="rofi">Rofi&lt;/h2>
&lt;p>Для удобного ручного переключения между профилями можно создать диалоговое окно с выбором профиля в &lt;a href="https://github.com/davatorium/rofi">Rofi&lt;/a>. Мы будем использовать Rofi как генератор меню для выбора нужного профиля.&lt;/p>
&lt;p>Устанавливаем Rofi из репозитория:&lt;/p>
&lt;pre>&lt;code># apt install rofi
&lt;/code>&lt;/pre>
&lt;p>Создаём скрипт &lt;code>display-profile-menu.sh&lt;/code>:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#633820">#!/usr/bin/env sh
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#633820">&lt;/span>autorandr &lt;span style="color:#c41a16">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">&lt;/span> | rofi -dmenu -width &lt;span style="color:#1c01ce">25&lt;/span> -no-fixed-num-lines -no-custom -p &lt;span style="color:#c41a16">&amp;#34;Display profile&amp;#34;&lt;/span> &lt;span style="color:#c41a16">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">&lt;/span> | awk &lt;span style="color:#c41a16">&amp;#39;{print $1}&amp;#39;&lt;/span> &lt;span style="color:#c41a16">\
&lt;/span>&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">&lt;/span> | xargs autorandr --load
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Он выводит меню с заголовком &amp;ldquo;Display profile&amp;rdquo; и списком доступных профилей. Можно выбирать профиль стрелками с клавиатуры, а так же фильтровать значения по введённому тексту. Итоговое меню выглядит так:&lt;/p>
&lt;p>&lt;img src="../post/images/rofi-autorandr-popup.png" alt="Rofi switcher UI">&lt;/p>
&lt;p>Цвета, стиль и функции меню можно настраивать (см. документацию Rofi).&lt;/p>
&lt;p>Скрипт так же можно повесить на хоткей. У меня в системе есть 2 хоткея &amp;ndash; для &lt;code>display-profile-auto.sh&lt;/code> и &lt;code>display-profile-menu.sh&lt;/code> &amp;ndash; автоматическое и ручное переключение профилей мониторов.&lt;/p></description></item><item><title>Создание и публикация пакета в PyPI</title><link>https://anlar.github.io/2023-09-13-python-package/</link><pubDate>Wed, 13 Sep 2023 00:00:00 +0400</pubDate><guid>https://anlar.github.io/2023-09-13-python-package/</guid><description>&lt;p>В экосистеме Python существует много систем для сборки и публикации пакетов. Здесь описывается самый простой и, насколько это возможно, &amp;ldquo;официальный и современный&amp;rdquo; на данный момент способ. Для примера используется консольное приложение на Python, которое можно будет как запускать из командной строки, так и использовать как библиотеку в других приложениях.&lt;/p>
&lt;p>Примером пакета, собранного этим способом, является &lt;code>todoist-to-todotxt&lt;/code>:&lt;/p>
&lt;ul>
&lt;li>&lt;a href="https://github.com/anlar/todoist-to-todotxt">Репозиторий проекта&lt;/a>&lt;/li>
&lt;li>&lt;a href="https://pypi.org/project/todoist-to-todotxt/">Страница в PyPI&lt;/a>&lt;/li>
&lt;/ul>
&lt;h2 id="подготовка">Подготовка&lt;/h2>
&lt;p>Сборка будет проходить в Ubuntu. Для работы понадобится Python 3, pip (пакетный менеджер) и virtualenv (для изолированной сборки пакета):&lt;/p>
&lt;pre>&lt;code># apt install python3-pip python3-venv
&lt;/code>&lt;/pre>
&lt;p>Также нужна система для сборки проектов Python:&lt;/p>
&lt;pre>&lt;code>$ pip install --upgrade build
&lt;/code>&lt;/pre>
&lt;p>И утилита для загрузки пакетов в PyPI:&lt;/p>
&lt;pre>&lt;code>$ pip install --upgrade twine
&lt;/code>&lt;/pre>
&lt;h2 id="структура-проекта">Структура проекта&lt;/h2>
&lt;p>Будем создавать проект с названием &lt;code>project-a&lt;/code>. Для этого нужна следующая структура файлов:&lt;/p>
&lt;p>&lt;strong>Директория проекта:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="background-color:#e5e5e5">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="background-color:#e5e5e5">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;/span>&lt;span style="background-color:#e5e5e5">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;/span>&lt;span style="background-color:#e5e5e5">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;/span>&lt;span style="background-color:#e5e5e5">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;/span>&lt;span style="background-color:#e5e5e5">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">&lt;code class="language-sh" data-lang="sh">&lt;span style="display:flex;">&lt;span>package-a/
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#e5e5e5">&lt;span>├── src
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>│   └── package_a
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#e5e5e5">&lt;span>│   ├── __init__.py
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#e5e5e5">&lt;span>│   └── main.py
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#e5e5e5">&lt;span>├── README.md
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#e5e5e5">&lt;span>├── LICENSE.txt
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#e5e5e5">&lt;span>└── pyproject.toml
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>&lt;strong>&amp;lt;2&amp;gt;&lt;/strong> Директория с исходным кодом проекта.&lt;/li>
&lt;li>&lt;strong>&amp;lt;4&amp;gt;&lt;/strong> Пустой файл &lt;code>\\__init__.py&lt;/code> для обозначения пакета.&lt;/li>
&lt;li>&lt;strong>&amp;lt;5&amp;gt;&lt;/strong> Главный файл с кодом.&lt;/li>
&lt;li>&lt;strong>&amp;lt;6&amp;gt;&lt;/strong> Файл с описанием проекта.&lt;/li>
&lt;li>&lt;strong>&amp;lt;7&amp;gt;&lt;/strong> Лицензия проекта (выбираем лицензию и копируем текст отсюда: &lt;a href="https://choosealicense.com/%29">https://choosealicense.com/)&lt;/a>.&lt;/li>
&lt;li>&lt;strong>&amp;lt;8&amp;gt;&lt;/strong> Файл с описанием пакета (необходим для сборки).&lt;/li>
&lt;/ol>
&lt;p>Добавим простой код в &lt;code>main.py&lt;/code>, который выводит название проекта:&lt;/p>
&lt;p>&lt;strong>main.py:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-python" data-lang="python">&lt;span style="display:flex;">&lt;span>&lt;span style="color:#177500">#!/usr/bin/env python3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">def&lt;/span> &lt;span style="color:#000">cli&lt;/span>():
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#a90d91">print&lt;/span>(&lt;span style="color:#c41a16">&amp;#34;Project A&amp;#34;&lt;/span>)
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#a90d91">if&lt;/span> &lt;span style="color:#000">__name__&lt;/span> &lt;span style="color:#000">==&lt;/span> &lt;span style="color:#c41a16">&amp;#34;__main__&amp;#34;&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">cli&lt;/span>()
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;p>Для описания сборки используется файл &lt;code>pyproject.toml&lt;/code>, который является &amp;ldquo;фронтендом&amp;rdquo; для разных систем сборки (в данном примере используется &lt;code>setuptools&lt;/code>).&lt;/p>
&lt;p>&lt;strong>pyproject.toml:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">&lt;code>&lt;span style="background-color:#e5e5e5">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;span style="background-color:#e5e5e5">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="background-color:#e5e5e5">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">&lt;code class="language-toml" data-lang="toml">&lt;span style="display:flex; background-color:#e5e5e5">&lt;span>[&lt;span style="color:#000">build-system&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">requires&lt;/span> = [&lt;span style="color:#c41a16">&amp;#34;setuptools&amp;gt;=61.0&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">build-backend&lt;/span> = &lt;span style="color:#c41a16">&amp;#34;setuptools.build_meta&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#e5e5e5">&lt;span>[&lt;span style="color:#000">project&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">name&lt;/span> = &lt;span style="color:#c41a16">&amp;#34;package-a&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">version&lt;/span> = &lt;span style="color:#c41a16">&amp;#34;0.0.1&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">authors&lt;/span> = [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> { &lt;span style="color:#000">name&lt;/span>=&lt;span style="color:#c41a16">&amp;#34;Developer Name&amp;#34;&lt;/span>, &lt;span style="color:#000">email&lt;/span>=&lt;span style="color:#c41a16">&amp;#34;developer-email@test.com&amp;#34;&lt;/span> },
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">description&lt;/span> = &lt;span style="color:#c41a16">&amp;#34;Dummy package A&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">readme&lt;/span> = &lt;span style="color:#c41a16">&amp;#34;README.md&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">license&lt;/span> = { &lt;span style="color:#000">file&lt;/span> = &lt;span style="color:#c41a16">&amp;#34;LICENSE.txt&amp;#34;&lt;/span> }
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">requires-python&lt;/span> = &lt;span style="color:#c41a16">&amp;#34;&amp;gt;=3.7&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">classifiers&lt;/span> = [
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c41a16">&amp;#34;Programming Language :: Python :: 3&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c41a16">&amp;#34;License :: OSI Approved :: MIT License&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#c41a16">&amp;#34;Operating System :: OS Independent&amp;#34;&lt;/span>,
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">keywords&lt;/span> = [&lt;span style="color:#c41a16">&amp;#34;dummy&amp;#34;&lt;/span>, &lt;span style="color:#c41a16">&amp;#34;test&amp;#34;&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#e5e5e5">&lt;span>[&lt;span style="color:#000">project&lt;/span>.&lt;span style="color:#000">scripts&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#000">package-a&lt;/span> = &lt;span style="color:#c41a16">&amp;#34;package_a.main:cli&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>[&lt;span style="color:#000">project&lt;/span>.&lt;span style="color:#000">urls&lt;/span>]
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">&amp;#34;Homepage&amp;#34;&lt;/span> = &lt;span style="color:#c41a16">&amp;#34;https://github.com/anlar/package-a&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">&amp;#34;Repository&amp;#34;&lt;/span> = &lt;span style="color:#c41a16">&amp;#34;https://github.com/anlar/package-a&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>&lt;span style="color:#c41a16">&amp;#34;Bug Tracker&amp;#34;&lt;/span> = &lt;span style="color:#c41a16">&amp;#34;https://github.com/anlar/package-a/issues&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>&lt;strong>&amp;lt;1&amp;gt;&lt;/strong> Описание выбранной системы сборки для пакета.&lt;/li>
&lt;li>&lt;strong>&amp;lt;5&amp;gt;&lt;/strong> Мета-информация о пакете.&lt;/li>
&lt;li>&lt;strong>&amp;lt;22&amp;gt;&lt;/strong> Название исполняемого файла, который будет создан для запуска скрипта.&lt;/li>
&lt;/ol>
&lt;h2 id="сборка">Сборка&lt;/h2>
&lt;p>Запускаем сборку пакета из директории &lt;code>package-a&lt;/code>:&lt;/p>
&lt;pre>&lt;code>$ python -m build
&lt;/code>&lt;/pre>
&lt;p>В результате получим собранный пакет в директории &lt;code>dist&lt;/code>:&lt;/p>
&lt;pre>&lt;code>package_a-0.0.1-py3-none-any.whl
package-a-0.0.1.tar.gz
&lt;/code>&lt;/pre>
&lt;h2 id="публикация-пакета">Публикация пакета&lt;/h2>
&lt;p>Для публикации сначала можно использовать тестовый репозиторий PyPI - &lt;a href="https://test.pypi.org/">TestPyPI&lt;/a>. После того, как загрузка и установка пакета будут протестированы, по аналогичной схеме можно загружать пакет в PyPI.&lt;/p>
&lt;p>Регистрируемся в TestPyPI, подключаем двухфакторную аутентификацию (без неё не будет работать загрузка пакетов) и создаём API token: &lt;a href="https://test.pypi.org/manage/account/#api-tokens">https://test.pypi.org/manage/account/#api-tokens&lt;/a>.&lt;/p>
&lt;p>Теперь можно загрузить собранный пакет:&lt;/p>
&lt;pre>&lt;code>$ python -m twine upload --repository testpypi dist/*
&lt;/code>&lt;/pre>
&lt;p>Потребуется ввести имя - используется &lt;code>__token__&lt;/code>, и пароль - созданный API token.&lt;/p>
&lt;p>После успешной загрузки можно установить загруженный пакет из репозитория:&lt;/p>
&lt;pre>&lt;code>$ pip install -i https://test.pypi.org/simple/ package-a
&lt;/code>&lt;/pre>
&lt;p>Далее, после завершения тестирования в TestPyPI, нужно зарегистрироваться в основном репозитории PyPI (и получить новый API token) и использовать аналогичные команды для загрузки и установки пакета:&lt;/p>
&lt;pre>&lt;code>$ python -m twine upload dist/*
$ pip install package-a
&lt;/code>&lt;/pre></description></item><item><title>Загрузка SSH-ключей с помощью Ansible</title><link>https://anlar.github.io/2022-12-02-ansible-ssh-key-deployment/</link><pubDate>Fri, 02 Dec 2022 00:00:00 +0400</pubDate><guid>https://anlar.github.io/2022-12-02-ansible-ssh-key-deployment/</guid><description>&lt;p>При развёртывании систем бывает нужно сгенерировать SSH-ключи, которые будут использовать удалённые серверы для доступа друг к другу. Например, родительский сервер &lt;code>head&lt;/code> должен иметь доступ по SSH к нескольким дочерним серверам &lt;code>node*&lt;/code>. Ниже приведён пример плейбука для Ansible, который добавляет на сервер &lt;code>head&lt;/code> новый SSH-ключ и размещает его публичную часть на серверы &lt;code>node*&lt;/code>. Т.е. после его выполнения родительский сервер будет иметь доступ по SSH к дочерним.&lt;/p>
&lt;p>Плейбук является идемпотентным, т.е. при повторном выполнении он проверяет, что ключ уже сгенерирован и размещен на серверах. Но если ключ или запись в &lt;code>known_hosts&lt;/code> будут удалены, то он их восстановит.&lt;/p>
&lt;p>&lt;strong>Плейбук &lt;code>deploy-ssh-key.yml&lt;/code>:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">&lt;code>&lt;span style="background-color:#e5e5e5">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 1
&lt;/span>&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 2
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 3
&lt;/span>&lt;span style="background-color:#e5e5e5">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 4
&lt;/span>&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 5
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 6
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 7
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 8
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f"> 9
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">10
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">11
&lt;/span>&lt;span style="background-color:#e5e5e5">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">12
&lt;/span>&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">13
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">14
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">15
&lt;/span>&lt;span style="background-color:#e5e5e5">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">16
&lt;/span>&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">17
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">18
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">19
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">20
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">21
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">22
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">23
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">24
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">25
&lt;/span>&lt;span style="background-color:#e5e5e5">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">26
&lt;/span>&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">27
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">28
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">29
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">30
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">31
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">32
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">33
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex; background-color:#e5e5e5">&lt;span>- &lt;span style="color:#000">name&lt;/span>: &lt;span style="color:#1c01ce">Generate key on head host&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">hosts&lt;/span>: &lt;span style="color:#1c01ce">head&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">tasks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#e5e5e5">&lt;span> - &lt;span style="color:#000">name&lt;/span>: &lt;span style="color:#1c01ce">Generate SSH key&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">community.crypto.openssh_keypair&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">path&lt;/span>: &lt;span style="color:#1c01ce">/home/head-user/.ssh/id_ed25519&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">type&lt;/span>: &lt;span style="color:#1c01ce">ed25519&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">owner&lt;/span>: &lt;span style="color:#1c01ce">head-user&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">group&lt;/span>: &lt;span style="color:#1c01ce">head-user&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">register&lt;/span>: &lt;span style="color:#1c01ce">key_result&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#e5e5e5">&lt;span> - &lt;span style="color:#000">name&lt;/span>: &lt;span style="color:#1c01ce">Set public SSH key variable&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">ansible.builtin.set_fact&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">public_ssh_key&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;{{ key_result.public_key }}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#e5e5e5">&lt;span> - &lt;span style="color:#000">name&lt;/span>: &lt;span style="color:#1c01ce">Add host to known_hosts&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">include_tasks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">file&lt;/span>: &lt;span style="color:#1c01ce">add-known-host.yml&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">vars&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">cfg_node&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;{{ item }}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">loop&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#1c01ce">node1&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#1c01ce">node2&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#1c01ce">node3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#e5e5e5">&lt;span>- &lt;span style="color:#000">name&lt;/span>: &lt;span style="color:#1c01ce">Copy generated SSH public key to nodes&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">hosts&lt;/span>: &lt;span style="color:#1c01ce">node1,node2,node3&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">tasks&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> - &lt;span style="color:#000">name&lt;/span>: &lt;span style="color:#1c01ce">Copy SSH public key&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">ansible.posix.authorized_key&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">user&lt;/span>: &lt;span style="color:#1c01ce">node-user&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">state&lt;/span>: &lt;span style="color:#1c01ce">present&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">key&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;{{ hostvars[&amp;#39;head&amp;#39;][&amp;#39;public_ssh_key&amp;#39;] }}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>&lt;strong>&amp;lt;1&amp;gt;&lt;/strong> Первый play: на главном хосте создаём SSH-ключ и добавляем в &lt;code>known_hosts&lt;/code> все дочерние хосты.&lt;/li>
&lt;li>&lt;strong>&amp;lt;4&amp;gt;&lt;/strong> Генерируем ed25519 SSH-ключ.&lt;/li>
&lt;li>&lt;strong>&amp;lt;12&amp;gt;&lt;/strong> Записываем публичную часть ключа в переменную.&lt;/li>
&lt;li>&lt;strong>&amp;lt;16&amp;gt;&lt;/strong> Добавляем все дочерние хосты в &lt;code>known_hosts&lt;/code>.&lt;/li>
&lt;li>&lt;strong>&amp;lt;26&amp;gt;&lt;/strong> Второй play: на каждом дочернем хосте заносим главный хост в список авторизованных ключей.&lt;/li>
&lt;/ol>
&lt;p>&lt;strong>Файл &lt;code>add-known-host.yml&lt;/code>:&lt;/strong>&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">&lt;code>&lt;span style="background-color:#e5e5e5">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;span style="background-color:#e5e5e5">&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">5
&lt;/span>&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">6
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">7
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">8
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">9
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;display:grid;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex; background-color:#e5e5e5">&lt;span>- &lt;span style="color:#000">name&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;Get key from host {{ cfg_node }}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">command&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;ssh-keyscan -t ecdsa {{ hostvars[ cfg_node ].ansible_host}} | grep -v ^#&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">register&lt;/span>: &lt;span style="color:#1c01ce">ecdsa_key&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span>
&lt;/span>&lt;/span>&lt;span style="display:flex; background-color:#e5e5e5">&lt;span>- &lt;span style="color:#000">name&lt;/span>: &lt;span style="color:#1c01ce">Add key to known_hosts&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">known_hosts&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">name&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;{{ hostvars[ cfg_node ].ansible_host }}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">path&lt;/span>: &lt;span style="color:#1c01ce">/home/head-user/.ssh/known_hosts&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">key&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;{{ ecdsa_key.stdout }}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;ol>
&lt;li>&lt;strong>&amp;lt;1&amp;gt;&lt;/strong> Генерируем запись для &lt;code>known_hosts&lt;/code>.&lt;/li>
&lt;li>&lt;strong>&amp;lt;5&amp;gt;&lt;/strong> Заносим родительский хост в &lt;code>known_hosts&lt;/code>.&lt;/li>
&lt;/ol>
&lt;h2 id="примечания">Примечания&lt;/h2>
&lt;ol>
&lt;li>
&lt;p>Запись дочерних хостов вынесена в отдельный файл, т.к. в Ansible &lt;a href="https://github.com/ansible/ansible/issues/13262#issuecomment-335904803">нельзя создавать цикл по нескольким переменным для блоков&lt;/a> (а у нас 2 задачи - генерация записи через &lt;code>ssh-keyscan&lt;/code> и запись в &lt;code>known_hosts&lt;/code>). Если дочерний хост только один, то можно объединить всё в один плейбук.&lt;/p>
&lt;/li>
&lt;li>
&lt;p>Для доступа к переменной &lt;code>public_ssh_key&lt;/code> используется &lt;code>hostvars['head']&lt;/code>, т.к. переменные хранятся на уровне хоста. Чтобы не привязываться к имени конкретного хоста, можно завести dummy-хост, в котором будут храниться общие переменные для всего плейбука. Например:&lt;/p>
&lt;div class="highlight">&lt;div style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">
&lt;table style="border-spacing:0;padding:0;margin:0;border:0;">&lt;tr>&lt;td style="vertical-align:top;padding:0;margin:0;border:0;">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">1
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">2
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">3
&lt;/span>&lt;span style="white-space:pre;-webkit-user-select:none;user-select:none;margin-right:0.4em;padding:0 0.4em 0 0.4em;color:#7f7f7f">4
&lt;/span>&lt;/code>&lt;/pre>&lt;/td>
&lt;td style="vertical-align:top;padding:0;margin:0;border:0;;width:100%">
&lt;pre tabindex="0" style="background-color:#fff;-moz-tab-size:4;-o-tab-size:4;tab-size:4;">&lt;code class="language-yml" data-lang="yml">&lt;span style="display:flex;">&lt;span>- &lt;span style="color:#000">name&lt;/span>: &lt;span style="color:#1c01ce">Add dummy host with variable&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">ansible.builtin.add_host&lt;/span>:
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">name&lt;/span>: &lt;span style="color:#1c01ce">dummy-host&lt;/span>
&lt;/span>&lt;/span>&lt;span style="display:flex;">&lt;span> &lt;span style="color:#000">public_ssh_key&lt;/span>: &lt;span style="color:#c41a16">&amp;#34;{{ key_result.public_key }}&amp;#34;&lt;/span>
&lt;/span>&lt;/span>&lt;/code>&lt;/pre>&lt;/td>&lt;/tr>&lt;/table>
&lt;/div>
&lt;/div>&lt;/li>
&lt;li>
&lt;p>Можно не добавлять родительский хост в &lt;code>known_hosts&lt;/code> дочерних, тогда нужно будет при работе по SSH использовать атрибут &lt;code>StrictHostKeyChecking=no&lt;/code>.&lt;/p>
&lt;/li>
&lt;/ol></description></item></channel></rss>